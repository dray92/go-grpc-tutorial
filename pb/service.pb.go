// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/service.proto

// Hello Service
//
// Hello Service API -> Says Hello.

package hello

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthAuthenticationTypes int32

const (
	Auth_none AuthAuthenticationTypes = 0
	Auth_jwt  AuthAuthenticationTypes = 1
	Auth_hmac AuthAuthenticationTypes = 2
)

var AuthAuthenticationTypes_name = map[int32]string{
	0: "none",
	1: "jwt",
	2: "hmac",
}

var AuthAuthenticationTypes_value = map[string]int32{
	"none": 0,
	"jwt":  1,
	"hmac": 2,
}

func (x AuthAuthenticationTypes) String() string {
	return proto.EnumName(AuthAuthenticationTypes_name, int32(x))
}

func (AuthAuthenticationTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{1, 0}
}

// Message represents a simple message sent to the Hello service.
type Message struct {
	// Id represents the message identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The message to be sent.
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// THIS IS NOT A SECURE WAY OF ACHIEVING AUTH INCLUDED
	// HERE FOR DEMONSTRATING FUNCTIONALITY OF oneof AND enum.
	//
	// Types that are valid to be assigned to OptionalAuthentication:
	//	*Message_Auth
	//	*Message_VerySecureAlternativeAuth
	OptionalAuthentication isMessage_OptionalAuthentication `protobuf_oneof:"optional_authentication"`
	XXX_NoUnkeyedLiteral   struct{}                         `json:"-"`
	XXX_unrecognized       []byte                           `json:"-"`
	XXX_sizecache          int32                            `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type isMessage_OptionalAuthentication interface {
	isMessage_OptionalAuthentication()
}

type Message_Auth struct {
	Auth *Auth `protobuf:"bytes,3,opt,name=auth,proto3,oneof"`
}

type Message_VerySecureAlternativeAuth struct {
	VerySecureAlternativeAuth string `protobuf:"bytes,4,opt,name=very_secure_alternative_auth,json=verySecureAlternativeAuth,proto3,oneof"`
}

func (*Message_Auth) isMessage_OptionalAuthentication() {}

func (*Message_VerySecureAlternativeAuth) isMessage_OptionalAuthentication() {}

func (m *Message) GetOptionalAuthentication() isMessage_OptionalAuthentication {
	if m != nil {
		return m.OptionalAuthentication
	}
	return nil
}

func (m *Message) GetAuth() *Auth {
	if x, ok := m.GetOptionalAuthentication().(*Message_Auth); ok {
		return x.Auth
	}
	return nil
}

func (m *Message) GetVerySecureAlternativeAuth() string {
	if x, ok := m.GetOptionalAuthentication().(*Message_VerySecureAlternativeAuth); ok {
		return x.VerySecureAlternativeAuth
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Message_Auth)(nil),
		(*Message_VerySecureAlternativeAuth)(nil),
	}
}

type Auth struct {
	// Types that are valid to be assigned to OptionalAuthenticationType:
	//	*Auth_HasNone
	//	*Auth_HasJwt
	//	*Auth_HasHmac
	OptionalAuthenticationType isAuth_OptionalAuthenticationType `protobuf_oneof:"optional_authentication_type"`
	Auth                       AuthAuthenticationTypes           `protobuf:"varint,4,opt,name=auth,proto3,enum=hello.AuthAuthenticationTypes" json:"auth,omitempty"`
	AuthIdentificationDocument string                            `protobuf:"bytes,5,opt,name=auth_identification_document,json=authIdentificationDocument,proto3" json:"auth_identification_document,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                          `json:"-"`
	XXX_unrecognized           []byte                            `json:"-"`
	XXX_sizecache              int32                             `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ff5ab49d8a5fcc4, []int{1}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

type isAuth_OptionalAuthenticationType interface {
	isAuth_OptionalAuthenticationType()
}

type Auth_HasNone struct {
	HasNone bool `protobuf:"varint,1,opt,name=has_none,json=hasNone,proto3,oneof"`
}

type Auth_HasJwt struct {
	HasJwt bool `protobuf:"varint,2,opt,name=has_jwt,json=hasJwt,proto3,oneof"`
}

type Auth_HasHmac struct {
	HasHmac bool `protobuf:"varint,3,opt,name=has_hmac,json=hasHmac,proto3,oneof"`
}

func (*Auth_HasNone) isAuth_OptionalAuthenticationType() {}

func (*Auth_HasJwt) isAuth_OptionalAuthenticationType() {}

func (*Auth_HasHmac) isAuth_OptionalAuthenticationType() {}

func (m *Auth) GetOptionalAuthenticationType() isAuth_OptionalAuthenticationType {
	if m != nil {
		return m.OptionalAuthenticationType
	}
	return nil
}

func (m *Auth) GetHasNone() bool {
	if x, ok := m.GetOptionalAuthenticationType().(*Auth_HasNone); ok {
		return x.HasNone
	}
	return false
}

func (m *Auth) GetHasJwt() bool {
	if x, ok := m.GetOptionalAuthenticationType().(*Auth_HasJwt); ok {
		return x.HasJwt
	}
	return false
}

func (m *Auth) GetHasHmac() bool {
	if x, ok := m.GetOptionalAuthenticationType().(*Auth_HasHmac); ok {
		return x.HasHmac
	}
	return false
}

func (m *Auth) GetAuth() AuthAuthenticationTypes {
	if m != nil {
		return m.Auth
	}
	return Auth_none
}

func (m *Auth) GetAuthIdentificationDocument() string {
	if m != nil {
		return m.AuthIdentificationDocument
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Auth) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Auth_HasNone)(nil),
		(*Auth_HasJwt)(nil),
		(*Auth_HasHmac)(nil),
	}
}

func init() {
	proto.RegisterEnum("hello.AuthAuthenticationTypes", AuthAuthenticationTypes_name, AuthAuthenticationTypes_value)
	proto.RegisterType((*Message)(nil), "hello.Message")
	proto.RegisterType((*Auth)(nil), "hello.Auth")
}

func init() { proto.RegisterFile("pb/service.proto", fileDescriptor_6ff5ab49d8a5fcc4) }

var fileDescriptor_6ff5ab49d8a5fcc4 = []byte{
	// 424 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4f, 0x6e, 0xd3, 0x40,
	0x14, 0xc6, 0x63, 0x27, 0x69, 0xc2, 0x2b, 0x8a, 0xac, 0x11, 0x12, 0x49, 0xb0, 0xaa, 0x60, 0xb1,
	0xe8, 0x2a, 0x23, 0x52, 0x0e, 0x40, 0x22, 0x16, 0x06, 0xa9, 0x2c, 0xd2, 0x1d, 0x12, 0xb2, 0xa6,
	0xf6, 0xc3, 0x9e, 0xca, 0x9e, 0xb1, 0x3c, 0x13, 0x87, 0xaa, 0xea, 0x86, 0x2b, 0x70, 0x09, 0x16,
	0xdc, 0x86, 0x2b, 0x70, 0x10, 0xf4, 0x26, 0x8e, 0xa0, 0x08, 0x56, 0x9e, 0x3f, 0xbf, 0xef, 0xf9,
	0xfb, 0xde, 0x3c, 0x08, 0xea, 0x6b, 0x6e, 0xb0, 0x69, 0x65, 0x8a, 0xcb, 0xba, 0xd1, 0x56, 0xb3,
	0x61, 0x81, 0x65, 0xa9, 0xe7, 0x61, 0xae, 0x75, 0x5e, 0x22, 0x17, 0xb5, 0xe4, 0x42, 0x29, 0x6d,
	0x85, 0x95, 0x5a, 0x99, 0x03, 0x14, 0x7d, 0xf7, 0x60, 0x74, 0x89, 0xc6, 0x88, 0x1c, 0xd9, 0x04,
	0x7c, 0x99, 0x4d, 0xbd, 0x85, 0x77, 0xfe, 0x68, 0xeb, 0xcb, 0x8c, 0x05, 0xd0, 0xaf, 0x4c, 0x3e,
	0xf5, 0xdd, 0x01, 0x2d, 0xd9, 0x73, 0x18, 0x88, 0x9d, 0x2d, 0xa6, 0xfd, 0x85, 0x77, 0x7e, 0xba,
	0x3a, 0x5d, 0xba, 0x3f, 0x2c, 0xd7, 0x3b, 0x5b, 0xc4, 0xbd, 0xad, 0xbb, 0x62, 0x6b, 0x08, 0x5b,
	0x6c, 0x6e, 0x13, 0x83, 0xe9, 0xae, 0xc1, 0x44, 0x94, 0x16, 0x1b, 0x25, 0xac, 0x6c, 0x31, 0x71,
	0xd2, 0x01, 0x55, 0x8b, 0x7b, 0xdb, 0x19, 0x51, 0x57, 0x0e, 0x5a, 0xff, 0x66, 0xa8, 0xd4, 0x66,
	0x06, 0x4f, 0x75, 0x4d, 0x26, 0x45, 0xe9, 0x34, 0xa8, 0xac, 0x4c, 0x9d, 0xeb, 0xe8, 0x9b, 0x0f,
	0x03, 0x62, 0xd8, 0x33, 0x18, 0x17, 0xc2, 0x24, 0x4a, 0x2b, 0x74, 0x8e, 0xc7, 0x71, 0x6f, 0x3b,
	0x2a, 0x84, 0x79, 0xaf, 0x15, 0xb2, 0x19, 0xd0, 0x32, 0xb9, 0xd9, 0x5b, 0x67, 0x9e, 0xee, 0x4e,
	0x0a, 0x61, 0xde, 0xed, 0xed, 0x51, 0x57, 0x54, 0x22, 0x75, 0x29, 0x8e, 0xba, 0xb8, 0x12, 0x29,
	0x7b, 0xd5, 0xc5, 0x23, 0x8f, 0x93, 0xd5, 0xe2, 0x8f, 0x78, 0xcb, 0x87, 0x3e, 0x12, 0x7b, 0x5b,
	0xa3, 0xe9, 0x12, 0xbf, 0x86, 0x90, 0xbe, 0x89, 0xcc, 0x08, 0xf8, 0x74, 0x44, 0x32, 0x9d, 0xee,
	0x2a, 0x54, 0x76, 0x3a, 0x74, 0xfd, 0x9b, 0x13, 0xf3, 0xf6, 0x01, 0xf2, 0xa6, 0x23, 0xa2, 0x0b,
	0x78, 0xf2, 0xaf, 0xfa, 0x6c, 0x0c, 0x03, 0x0a, 0x18, 0xf4, 0xd8, 0x08, 0xfa, 0x37, 0x7b, 0x1b,
	0x78, 0x74, 0x44, 0xde, 0x03, 0x7f, 0x73, 0x06, 0xe1, 0x7f, 0xba, 0xe4, 0xd4, 0xab, 0x8f, 0xf0,
	0x38, 0x26, 0xff, 0x57, 0x87, 0xa1, 0x60, 0x97, 0x30, 0x74, 0x7b, 0x36, 0xe9, 0x72, 0x75, 0xcf,
	0x3e, 0xff, 0x6b, 0x1f, 0xbd, 0xf8, 0xf2, 0xe3, 0xe7, 0x57, 0xff, 0x2c, 0x0a, 0x79, 0xfb, 0x92,
	0xe3, 0x67, 0x51, 0xd5, 0x25, 0x72, 0x87, 0xf0, 0x3b, 0x99, 0xdd, 0xf3, 0xbb, 0xca, 0xe4, 0xf7,
	0x9b, 0xd1, 0x87, 0xc3, 0x7c, 0x5d, 0x9f, 0xb8, 0x41, 0xba, 0xf8, 0x15, 0x00, 0x00, 0xff, 0xff,
	0xcf, 0x8b, 0x01, 0x10, 0x81, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	// Hello method receives a simple message and returns it.
	// The message posted as the id parameter will also be returned.
	Hello(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
}

type helloServiceClient struct {
	cc *grpc.ClientConn
}

func NewHelloServiceClient(cc *grpc.ClientConn) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) Hello(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/hello.HelloService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	// Hello method receives a simple message and returns it.
	// The message posted as the id parameter will also be returned.
	Hello(context.Context, *Message) (*Message, error)
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hello.HelloService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).Hello(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hello.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _HelloService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/service.proto",
}
